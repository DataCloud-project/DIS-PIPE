{
  "openapi": "3.0.1",
  "info": {
    "title": "DIS-PIPE",
    "description": "For the protected end points, you need to genereate an access token (e.g. using postman) and provide it by opening \"Authorize\"",
    "version": "v1"
  },
  "paths": {
    "/api/export/dsl": {
      "post": {
        "tags": [
          "Export"
        ],
        "summary": "Transform workflow to dsl",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Canvas"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Canvas"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Canvas"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Canvas"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workflow in DSL format",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/repo/s": {
      "get": {
        "tags": [
          "Repo"
        ],
        "summary": "Search for puclic workflow",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of public workflow matching the query",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PublicRepoListApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicRepoListApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicRepoListApiResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/repo": {
      "get": {
        "tags": [
          "Repo"
        ],
        "summary": "Get a specific workflow",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of public repo matching the query",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateApiResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/exportPipeline{id}": {
      "get": {
        "tags": [
          "exportPipeline"
        ],
        "summary": "Transfer from DIS-PIPE storage the DSL with identified id to DEF-PIPE remote storage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List workflow in the user's repository",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateListApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateListApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateListApiResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Repo"
        ],
        "summary": "Add/update workflow",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New workflow",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateApiResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/repo/{user}/{id}": {
      "delete": {
        "tags": [
          "Repo"
        ],
        "summary": "Delete workflow",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/repo/{user}/import": {
      "post": {
        "tags": [
          "Repo"
        ],
        "summary": "Import DSL",
        "description": " Swagger doesn't allow a correct formating (newline, tab), try the request on postman\r\n -> = tab (\\t)\r\n \r\n Pipeline name {\\\r\n->   ->  steps:\\\r\n->   ->  -\tExtract\\\r\n->   ->  implementation: docker\\\r\n->   ->  image: def/def-extract\\\r\n->   ->  environmentParameters: {\\\r\n->   ->  ->  pwd = xxx\\\r\n->   ->  }\\\r\n->   ->  resourceProvider: External\\\r\n->   ->  -\tFilter\\\r\n->   ->  implementation: docker\\\r\n->   ->  image: def/def-filter\\\r\n->   ->  environmentParameters: {\\\r\n->   ->  ->  pwd = xxx\\\r\n->   ->  }\\\r\n->   ->  resourceProvider: External\\\r\n}",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "dsl": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "dsl": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/templates": {
      "post": {
        "tags": [
          "Templates"
        ],
        "summary": "Add/Update a template",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New template",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateApiResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Get Available template",
        "responses": {
          "200": {
            "description": "List of template",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateListApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateListApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateListApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/templates/{id}": {
      "delete": {
        "tags": [
          "Templates"
        ],
        "summary": "Delete a template",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BooleanApiResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Canvas": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CanvasElement"
            },
            "nullable": true
          },
          "resourceProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CanvasProvider"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CanvasElement": {
        "type": "object",
        "properties": {
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/CanvasElementType"
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CanvasElementType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "CanvasProvider": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "providerLocation": {
            "type": "string",
            "nullable": true
          },
          "mappingLocation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JToken": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JToken"
        }
      },
      "ObjectId": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "machine": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "deprecated": true
          },
          "pid": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "deprecated": true
          },
          "increment": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "deprecated": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PublicRepoListApiResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Template": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/ObjectId"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sourceTemplateId": {
            "type": "string",
            "nullable": true
          },
          "canvasTemplate": {
            "nullable": true
          },
          "resourceProviders": {
            "nullable": true
          },
          "public": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TemplateApiResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TemplateListApiResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Enter you your Keyclaok bearer token in the format bellow (don't forget the \"Bearer\")\n\n Bearer YOUR_ACCESS_TOKEN",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}